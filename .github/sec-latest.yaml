- Target: nmaguiar/netutils:latest (alpine 3.21.0)
  Class: os-pkgs
  Type: alpine
  Vulnerabilities:
  - VulnerabilityID: CVE-2025-22134
    PkgID: vim@9.1.0936-r0
    PkgName: vim
    PkgIdentifier:
      PURL: pkg:apk/alpine/vim@9.1.0936-r0?arch=x86_64&distro=3.21.0
      UID: 1bd40a3ac05ad413
    InstalledVersion: 9.1.0936-r0
    FixedVersion: 9.1.1003-r0
    Status: fixed
    Layer:
      Digest: sha256:250a4eb10fd83d0776259bfb464eb31db1a0ffe6eda761d2e6b7a8ea94be9ee9
      DiffID: sha256:859013e74dc2caebbc109aa15fff8e7183b164e133893620e5b02d3f0dffc251
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2025-22134
    DataSource:
      ID: alpine
      Name: Alpine Secdb
      URL: https://secdb.alpinelinux.org/
    Title: 'vim: heap-buffer-overflow with visual mode in Vim < 9.1.1003'
    Description: When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003
    Severity: MEDIUM
    CweIDs:
    - CWE-122
    VendorSeverity:
      azure: 2
      cbl-mariner: 2
      redhat: 1
      ubuntu: 2
    CVSS:
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:L
        V3Score: 4.2
    References:
    - http://www.openwall.com/lists/oss-security/2025/01/11/1
    - https://access.redhat.com/security/cve/CVE-2025-22134
    - https://github.com/vim/vim/commit/c9a1e257f1630a0866447e53a564f7ff96a80ead
    - https://github.com/vim/vim/security/advisories/GHSA-5rgf-26wj-48v8
    - https://nvd.nist.gov/vuln/detail/CVE-2025-22134
    - https://ubuntu.com/security/notices/USN-7220-1
    - https://www.cve.org/CVERecord?id=CVE-2025-22134
    PublishedDate: '2025-01-13T21:15:14.333Z'
    LastModifiedDate: '2025-01-13T21:15:14.333Z'
  - VulnerabilityID: CVE-2025-22134
    PkgID: vim-common@9.1.0936-r0
    PkgName: vim-common
    PkgIdentifier:
      PURL: pkg:apk/alpine/vim-common@9.1.0936-r0?arch=x86_64&distro=3.21.0
      UID: 856ca7dead248249
    InstalledVersion: 9.1.0936-r0
    FixedVersion: 9.1.1003-r0
    Status: fixed
    Layer:
      Digest: sha256:250a4eb10fd83d0776259bfb464eb31db1a0ffe6eda761d2e6b7a8ea94be9ee9
      DiffID: sha256:859013e74dc2caebbc109aa15fff8e7183b164e133893620e5b02d3f0dffc251
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2025-22134
    DataSource:
      ID: alpine
      Name: Alpine Secdb
      URL: https://secdb.alpinelinux.org/
    Title: 'vim: heap-buffer-overflow with visual mode in Vim < 9.1.1003'
    Description: When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003
    Severity: MEDIUM
    CweIDs:
    - CWE-122
    VendorSeverity:
      azure: 2
      cbl-mariner: 2
      redhat: 1
      ubuntu: 2
    CVSS:
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:L
        V3Score: 4.2
    References:
    - http://www.openwall.com/lists/oss-security/2025/01/11/1
    - https://access.redhat.com/security/cve/CVE-2025-22134
    - https://github.com/vim/vim/commit/c9a1e257f1630a0866447e53a564f7ff96a80ead
    - https://github.com/vim/vim/security/advisories/GHSA-5rgf-26wj-48v8
    - https://nvd.nist.gov/vuln/detail/CVE-2025-22134
    - https://ubuntu.com/security/notices/USN-7220-1
    - https://www.cve.org/CVERecord?id=CVE-2025-22134
    PublishedDate: '2025-01-13T21:15:14.333Z'
    LastModifiedDate: '2025-01-13T21:15:14.333Z'
  - VulnerabilityID: CVE-2025-22134
    PkgID: xxd@9.1.0936-r0
    PkgName: xxd
    PkgIdentifier:
      PURL: pkg:apk/alpine/xxd@9.1.0936-r0?arch=x86_64&distro=3.21.0
      UID: cb52e760c8ff70ed
    InstalledVersion: 9.1.0936-r0
    FixedVersion: 9.1.1003-r0
    Status: fixed
    Layer:
      Digest: sha256:250a4eb10fd83d0776259bfb464eb31db1a0ffe6eda761d2e6b7a8ea94be9ee9
      DiffID: sha256:859013e74dc2caebbc109aa15fff8e7183b164e133893620e5b02d3f0dffc251
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2025-22134
    DataSource:
      ID: alpine
      Name: Alpine Secdb
      URL: https://secdb.alpinelinux.org/
    Title: 'vim: heap-buffer-overflow with visual mode in Vim < 9.1.1003'
    Description: When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003
    Severity: MEDIUM
    CweIDs:
    - CWE-122
    VendorSeverity:
      azure: 2
      cbl-mariner: 2
      redhat: 1
      ubuntu: 2
    CVSS:
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:L
        V3Score: 4.2
    References:
    - http://www.openwall.com/lists/oss-security/2025/01/11/1
    - https://access.redhat.com/security/cve/CVE-2025-22134
    - https://github.com/vim/vim/commit/c9a1e257f1630a0866447e53a564f7ff96a80ead
    - https://github.com/vim/vim/security/advisories/GHSA-5rgf-26wj-48v8
    - https://nvd.nist.gov/vuln/detail/CVE-2025-22134
    - https://ubuntu.com/security/notices/USN-7220-1
    - https://www.cve.org/CVERecord?id=CVE-2025-22134
    PublishedDate: '2025-01-13T21:15:14.333Z'
    LastModifiedDate: '2025-01-13T21:15:14.333Z'
- Target: Java
  Class: lang-pkgs
  Type: jar
- Target: Python
  Class: lang-pkgs
  Type: python-pkg
  Vulnerabilities:
  - VulnerabilityID: CVE-2024-56201
    PkgName: Jinja2
    PkgPath: opt/mitmproxy/lib/python3.12/site-packages/jinja2-3.1.4.dist-info/METADATA
    PkgIdentifier:
      PURL: pkg:pypi/jinja2@3.1.4
      UID: bf6339712af5866c
    InstalledVersion: 3.1.4
    FixedVersion: 3.1.5
    Status: fixed
    Layer:
      Digest: sha256:250a4eb10fd83d0776259bfb464eb31db1a0ffe6eda761d2e6b7a8ea94be9ee9
      DiffID: sha256:859013e74dc2caebbc109aa15fff8e7183b164e133893620e5b02d3f0dffc251
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-56201
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory pip
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip
    Title: 'jinja2: Jinja has a sandbox breakout through malicious filenames'
    Description: Jinja is an extensible templating engine. In versions on the 3.x branch prior to 3.1.5, a bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used. To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename. This vulnerability is fixed in 3.1.5.
    Severity: MEDIUM
    CweIDs:
    - CWE-150
    VendorSeverity:
      alma: 3
      amazon: 3
      azure: 2
      cbl-mariner: 2
      ghsa: 2
      oracle-oval: 3
      redhat: 3
      ubuntu: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
        V3Score: 8.8
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H
        V3Score: 7.3
    References:
    - https://access.redhat.com/errata/RHSA-2025:0308
    - https://access.redhat.com/security/cve/CVE-2024-56201
    - https://errata.almalinux.org/9/ALSA-2025-0308.html
    - https://github.com/pallets/jinja
    - https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f
    - https://github.com/pallets/jinja/issues/1792
    - https://github.com/pallets/jinja/releases/tag/3.1.5
    - https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699
    - https://linux.oracle.com/cve/CVE-2024-56201.html
    - https://linux.oracle.com/errata/ELSA-2025-0308.html
    - https://nvd.nist.gov/vuln/detail/CVE-2024-56201
    - https://www.cve.org/CVERecord?id=CVE-2024-56201
    PublishedDate: '2024-12-23T16:15:07.41Z'
    LastModifiedDate: '2025-01-08T16:15:36.387Z'
  - VulnerabilityID: CVE-2024-56326
    PkgName: Jinja2
    PkgPath: opt/mitmproxy/lib/python3.12/site-packages/jinja2-3.1.4.dist-info/METADATA
    PkgIdentifier:
      PURL: pkg:pypi/jinja2@3.1.4
      UID: bf6339712af5866c
    InstalledVersion: 3.1.4
    FixedVersion: 3.1.5
    Status: fixed
    Layer:
      Digest: sha256:250a4eb10fd83d0776259bfb464eb31db1a0ffe6eda761d2e6b7a8ea94be9ee9
      DiffID: sha256:859013e74dc2caebbc109aa15fff8e7183b164e133893620e5b02d3f0dffc251
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-56326
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory pip
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip
    Title: 'jinja2: Jinja has a sandbox breakout through indirect reference to format method'
    Description: Jinja is an extensible templating engine. Prior to 3.1.5, An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox. This vulnerability is fixed in 3.1.5.
    Severity: MEDIUM
    CweIDs:
    - CWE-693
    - CWE-1336
    VendorSeverity:
      alma: 3
      amazon: 3
      azure: 2
      cbl-mariner: 2
      ghsa: 2
      oracle-oval: 3
      redhat: 3
      ubuntu: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
        V3Score: 7.8
      redhat:
        V3Vector: CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H
        V3Score: 6.3
    References:
    - https://access.redhat.com/errata/RHSA-2025:0667
    - https://access.redhat.com/security/cve/CVE-2024-56326
    - https://bugzilla.redhat.com/2333856
    - https://errata.almalinux.org/9/ALSA-2025-0667.html
    - https://github.com/pallets/jinja
    - https://github.com/pallets/jinja/commit/48b0687e05a5466a91cd5812d604fa37ad0943b4
    - https://github.com/pallets/jinja/releases/tag/3.1.5
    - https://github.com/pallets/jinja/security/advisories/GHSA-q2x7-8rv6-6q7h
    - https://linux.oracle.com/cve/CVE-2024-56326.html
    - https://linux.oracle.com/errata/ELSA-2025-0667.html
    - https://nvd.nist.gov/vuln/detail/CVE-2024-56326
    - https://www.cve.org/CVERecord?id=CVE-2024-56326
    PublishedDate: '2024-12-23T16:15:07.59Z'
    LastModifiedDate: '2024-12-27T18:15:38.947Z'
